FUNCTION ZHR_CERTIF_ENFERMEDAD.
*"----------------------------------------------------------------------
*"*"Interfase local
*"  IMPORTING
*"     VALUE(PERSONA) TYPE  PA0002-PERNR
*"  EXPORTING
*"     REFERENCE(OBSERVACIONES_RU) TYPE  ZHR_TEXTOS_OBSERVACIONES_TABLA
*"     REFERENCE(JUNTAS_MEDICAS) TYPE  ZHR_CERT_JUNTAS_MEDICA
*"     REFERENCE(CERTIFICACIONES) TYPE  ZHR_CERT_MEDICAS_PERSONA
*"----------------------------------------------------------------------
*-----------------------------------------------------------------------
* Programa   : ZHR_CERTIF_ENFERMEDAD.
* Descripcion: Funcion que recibe un número de persona (pernr) y devuelve una estructura
*              que contiene información sobre los pedidos de certificacion medica.
* Tran       : Devuelve datos de los Infotipo 0082, Subtipos del 1,2,3 y licencia medica L6
* Autor      : RDFB
* Modificado : 17/08/2018
*-----------------------------------------------------------------------
  TABLES: PA0082,T572H,PA2001.

  DATA:
    LT_PA0082 TYPE TABLE OF P0082 WITH HEADER LINE,
    LT_PA0002 TYPE TABLE OF P0002 WITH HEADER LINE,
    LT_T572H  TYPE TABLE OF T572H WITH HEADER LINE,
    WA_PA0002 TYPE P0002,
    WA_PA0082 TYPE P0082,
    WA_T572H  TYPE T572H.
  DATA:
    LD_SUBRC     TYPE SY-SUBRC,
    LD_TCLAS     TYPE PSPAR-TCLAS,
    LD_PERNR     TYPE PRELP-PERNR,
    LD_INFTY     TYPE PRELP-INFTY,
    LD_SUBTY     TYPE PRELP-SUBTY,
    LD_BEGDA     TYPE PRELP-BEGDA,
    LD_ENDDA     TYPE PRELP-ENDDA,
    CERT_MEDICA  TYPE ZHR_CERT_MEDICA_PERSONA,
    JUNTA_MEDICA TYPE ZHR_CERT_JUNTA_MEDICA.

  DATA:
    LD_PSKEY 	       TYPE PSKEY,
    IT_INFOTYPE_TEXT TYPE STANDARD TABLE OF HRWPC_S_INFOTYPE_TEXT,
    WA_INFOTYPE_TEXT LIKE LINE OF IT_INFOTYPE_TEXT,
    OBSERVACIONES    TYPE ZHR_TEXTOS_OBSERVACIONES.

  DATA:
    C_RCD(20), C_OCD(20),
    INDX TYPE T578T-SBJKT.

  FIELD-SYMBOLS: <RCD>, <OCD>.

  SELECT * FROM PA0002 INTO CORRESPONDING FIELDS OF TABLE LT_PA0002 WHERE PERNR = PERSONA AND BEGDA <= SY-DATUM AND ENDDA >= SY-DATUM.
  LD_TCLAS = 'A'.
  LD_INFTY = '0082'.

  LOOP AT LT_PA0002 INTO WA_PA0002.
    LD_PERNR = WA_PA0002-PERNR.
    LD_BEGDA = WA_PA0002-BEGDA.
    LD_ENDDA = WA_PA0002-ENDDA.
  ENDLOOP.

  CALL FUNCTION 'HR_READ_SUBTYPE'
    EXPORTING
      TCLAS           = LD_TCLAS
      PERNR           = LD_PERNR
      INFTY           = LD_INFTY
      SUBTY           = '*'
      BEGDA           = LD_BEGDA
      ENDDA           = LD_ENDDA
      BYPASS_BUFFER   = 'X'
    TABLES
      INFTY_TAB       = LT_PA0082
    EXCEPTIONS
      INFTY_NOT_FOUND = 1
      OTHERS          = 2.

  LOOP AT LT_PA0082 INTO WA_PA0082.
    CLEAR PA2001.
    CERT_MEDICA-DEPARTAMENTO        =   WA_PA0082-EVTAR.
    CERT_MEDICA-LOCALIDAD           =   WA_PA0082-EVTSR.
    CERT_MEDICA-FECHA_SOLICITUD     =   WA_PA0082-IDATE.
    JUNTA_MEDICA-FECHA_SOLICITUD     =   WA_PA0082-IDATE.
    SELECT SINGLE * FROM PA2001 WHERE PERNR = WA_PA0082-PERNR AND SUBTY = 'L600' AND BEGDA = WA_PA0082-BEGDA.
    CERT_MEDICA-DIAS = PA2001-ABWTG.

    IF WA_PA0082-ITXEX EQ 'X'.
      LD_PSKEY-PERNR = WA_PA0082-PERNR.
      LD_PSKEY-INFTY = WA_PA0082-INFTY.
      LD_PSKEY-SUBTY = WA_PA0082-SUBTY.
      LD_PSKEY-BEGDA = WA_PA0082-BEGDA.
      LD_PSKEY-ENDDA = WA_PA0082-ENDDA.
      LD_PSKEY-OBJPS = WA_PA0082-OBJPS.
      LD_PSKEY-SEQNR = WA_PA0082-SEQNR.

      CALL FUNCTION 'HRWPC_RFC_IT0XXX_TEXT_GET'
        EXPORTING
          PSKEY         = LD_PSKEY
        TABLES
          INFOTYPE_TEXT = IT_INFOTYPE_TEXT.

      IF IT_INFOTYPE_TEXT IS NOT INITIAL.
        LOOP AT IT_INFOTYPE_TEXT INTO WA_INFOTYPE_TEXT.
          IF SY-TABIX EQ 2 AND WA_INFOTYPE_TEXT IS NOT INITIAL.
            OBSERVACIONES-NOMBRE = 'DIRECCION'.
            OBSERVACIONES-TEXTO = WA_INFOTYPE_TEXT.
            APPEND OBSERVACIONES TO OBSERVACIONES_RU.
          ELSEIF SY-TABIX EQ 4 OR SY-TABIX EQ 5 AND WA_INFOTYPE_TEXT IS NOT INITIAL.
            OBSERVACIONES-NOMBRE = 'OBSERVACIONES'.
            OBSERVACIONES-TEXTO = WA_INFOTYPE_TEXT.
            APPEND OBSERVACIONES TO OBSERVACIONES_RU.
          ENDIF.
        ENDLOOP.
        CLEAR WA_INFOTYPE_TEXT.
      ENDIF.
    ENDIF.
    DO 11 TIMES.
      INDX = SY-INDEX.
      CONCATENATE 'rcd0' INDX INTO C_RCD.
      CONCATENATE 'ocd0' INDX INTO C_OCD.
      ASSIGN COMPONENT C_RCD OF STRUCTURE WA_PA0082 TO <RCD>.
      ASSIGN COMPONENT C_OCD OF STRUCTURE WA_PA0082 TO <OCD>.
      SELECT SINGLE * FROM T572H WHERE SPRSL = 'S' AND INFTY = WA_PA0082-INFTY AND SUBTY = WA_PA0082-SUBTY AND OCCCD = <OCD> AND REMCD = <RCD>.
      IF WA_PA0082-SUBTY EQ '0001' OR WA_PA0082-SUBTY EQ '0002'.
        CASE SY-INDEX.
          WHEN 1.
            IF <RCD> IS NOT INITIAL AND <OCD> IS NOT INITIAL.
              CERT_MEDICA-MEDICO_CERTIFICADOR = T572H-REMAR.
            ENDIF.
          WHEN 3.
            IF <RCD> IS NOT INITIAL AND <OCD> IS NOT INITIAL.
              CERT_MEDICA-CONDUCTA = T572H-REMCD.
            ENDIF.
          WHEN 5.
            IF <RCD> IS NOT INITIAL AND <OCD> IS NOT INITIAL.
              CERT_MEDICA-AFECCION = T572H-REMCD.
            ENDIF.
          WHEN 6.
            IF <RCD> IS NOT INITIAL AND <OCD> IS NOT INITIAL.
              CERT_MEDICA-REGION = T572H-REMCD.
            ENDIF.
        ENDCASE.
      ELSEIF WA_PA0082-SUBTY EQ '0003'.
        CASE SY-INDEX.
          WHEN 5.
            IF <RCD> IS NOT INITIAL AND <OCD> IS NOT INITIAL.
              JUNTA_MEDICA-AFECCION = T572H-REMCD.
            ENDIF.
          WHEN 8.
            IF <RCD> IS NOT INITIAL AND <OCD> IS NOT INITIAL.
              JUNTA_MEDICA-DICTAMEN = T572H-REMCD.
            ENDIF.
        ENDCASE.
      ENDIF.
    ENDDO.
    IF CERT_MEDICA IS NOT INITIAL AND WA_PA0082-SUBTY EQ '0001' OR WA_PA0082-SUBTY EQ '0002'.
      APPEND CERT_MEDICA TO CERTIFICACIONES.
    ELSEIF JUNTA_MEDICA-DICTAMEN IS NOT INITIAL AND WA_PA0082-SUBTY EQ '0003'.
      APPEND JUNTA_MEDICA TO JUNTAS_MEDICAS.
    ENDIF.
    CLEAR CERT_MEDICA.
    CLEAR JUNTA_MEDICA.
  ENDLOOP.
ENDFUNCTION.